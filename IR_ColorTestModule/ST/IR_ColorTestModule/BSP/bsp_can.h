
/*
*********************************************************************************************************
*
*                                        BOARD SUPPORT PACKAGE
*                                       SERIAL (CAN) INTERFACE
*
*                                     ST Microelectronics STM32
*                                              on the
*
*                                          8 CHANNEL LED ANALYZER V1.2
*
* Filename      : bsp_can.h
* Version       : V1.00
* Programmer(s) : RS
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                                                 MODULE
*
* Note(s) : (1) This header file is protected from multiple pre-processor inclusion through use of the
*               BSP_SER present pre-processor macro definition.
*********************************************************************************************************
*/

#ifndef  BSP_CAN_H
#define  BSP_CAN_H


/*
*********************************************************************************************************
*                                              EXTERNS
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*                                               DEFINES
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                                               INCLUDES
*********************************************************************************************************
*/

#include  <app_cfg.h>


/*
*********************************************************************************************************
*                                          GLOBAL VARIABLES
*********************************************************************************************************
*/



/*
*********************************************************************************************************
*                                               MACRO'S
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*                                              DATA TYPES
*********************************************************************************************************
*/
typedef struct CAN_EventHandle_TypeDef
{
	struct CAN_EventHandle_TypeDef *prev;
	struct CAN_EventHandle_TypeDef *next;
	INT32U StdId;
	INT8U IDE;			/* Specifies the type of identifier for the message that will be received. 
										@ref CAN_identifier_type */
	INT8U RTR;			/* Specifies the type of frame for the received message.  
										@ref CAN_remote_transmission_request*/
//	INT8U data[8];
//	INT8U DLC;
	void (*Can_Callback)(INT8U *data, INT8U length);
}CAN_EventHandle_TypeDef;


/*
*********************************************************************************************************
*                                            FUNCTION PROTOTYPES
*********************************************************************************************************
*/

void BSP_Can_Init(void);

INT8U BSP_Can_EventRegister(CAN_EventHandle_TypeDef * newHandle);
INT8U BSP_Can_EventUnregister(CAN_EventHandle_TypeDef DeletedHandle);
void  BSP_CAN_Printf(CPU_INT16U ID, CPU_CHAR * format, ...);
void  BSP_CAN_ReadStr(CPU_INT16U *ID, CPU_CHAR * string);
/*
*********************************************************************************************************
*                                     INTERRUPT CONTROLLER FUNCTIONS
*********************************************************************************************************
*/


/*
*********************************************************************************************************
*                                        BACKWARDS COMPATIBILITY
*********************************************************************************************************
*/




/*
*********************************************************************************************************
*                                             RS-232 SERVICES
*********************************************************************************************************
*/

/*
*********************************************************************************************************
*                                              MODULE END
*********************************************************************************************************
*/

#endif
